# =================================================================
# DISCORD DSU BOT CONFIGURATION
# =================================================================
# Copy this file to .env and update the values below
# Never commit your .env file to version control!

# =================================================================
# REQUIRED CONFIGURATION
# =================================================================

# Discord Bot Token (REQUIRED)
# Get from: https://discord.com/developers/applications
# 1. Create New Application â†’ Bot â†’ Reset Token â†’ Copy Token
# 2. Enable "Message Content Intent" in Bot settings
# 3. Invite bot to server with Send Messages, Embed Links permissions
DISCORD_BOT_TOKEN=your_discord_bot_token_here

# Discord Channel ID where DSU messages will be sent (REQUIRED)
# How to get Channel ID:
# 1. Enable Developer Mode: Discord Settings â†’ Advanced â†’ Developer Mode ON
# 2. Right-click target channel â†’ Copy ID
# 3. Paste the 17-19 digit number below
DSU_CHANNEL_ID=your_channel_id_here

# =================================================================
# APPLICATION CONFIGURATION
# =================================================================

# Environment mode
NODE_ENV=development

# HTTP server port for health checks and monitoring
PORT=3000

# Bot application name (for logging and monitoring)
BOT_NAME=DSU Discord Bot

# Bot version (automatically detected from package.json if not set)
# BOT_VERSION=1.0.0

# =================================================================
# SCHEDULING CONFIGURATION
# =================================================================

# Timezone for DSU scheduling (default: Asia/Jakarta for WIB)
# Full list: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
# Examples: Asia/Jakarta, America/New_York, Europe/London, Asia/Tokyo
TIMEZONE=Asia/Jakarta

# Custom schedule overrides (cron format: minute hour day month dayOfWeek)
# Default: 9:00 AM weekdays, 5:00 PM weekdays
# Examples:
#   - 0 9 * * 1-5   = 9:00 AM Monday-Friday
#   - 30 8 * * 1-5  = 8:30 AM Monday-Friday  
#   - 0 9,17 * * 1-5 = 9:00 AM and 5:00 PM Monday-Friday
MORNING_SCHEDULE=0 9 * * 1-5
EVENING_SCHEDULE=0 17 * * 1-5

# Enable/disable automatic scheduling (useful for testing)
ENABLE_SCHEDULING=true

# =================================================================
# DSU TEMPLATE CUSTOMIZATION
# =================================================================

# Team mentions configuration
# Enable @everyone mentions (use carefully!)
MENTION_EVERYONE=false

# Enable @here mentions (recommended for active members)
MENTION_HERE=false

# Role IDs to mention (comma-separated, no spaces)
# Get Role ID: Server Settings â†’ Roles â†’ Right-click role â†’ Copy ID
# MENTION_ROLES=123456789012345678,987654321098765432

# User IDs to mention (comma-separated, no spaces)
# Get User ID: Right-click user â†’ Copy ID (Developer Mode required)
# MENTION_USERS=111111111111111111,222222222222222222

# Template colors (hex values without # symbol)
# You can use any hex color code: https://htmlcolorcodes.com/
MORNING_COLOR=3498db
EVENING_COLOR=e74c3c
SUCCESS_COLOR=2ecc71
WARNING_COLOR=f39c12

# Custom greeting messages
MORNING_GREETING=Good morning team! Time for our morning DSU check-in.
EVENING_GREETING=Good evening team! Let's wrap up the day with our evening reflection.

# Custom footer messages
MORNING_FOOTER=ðŸ’¡ Reply to this message with your updates | Automated DSU Bot
EVENING_FOOTER=ðŸŒ™ Have a great evening! | Automated DSU Bot

# Template format (full, compact, text)
# - full: Rich embeds with examples and detailed formatting
# - compact: Simplified embeds with less text
# - text: Plain text fallback (no embeds)
TEMPLATE_FORMAT=full

# =================================================================
# LOGGING & MONITORING CONFIGURATION
# =================================================================

# Log level (error, warn, info, debug)
LOG_LEVEL=info

# Enable file logging (logs saved to logs/ directory)
ENABLE_FILE_LOGGING=true

# Log file rotation size (in MB)
LOG_ROTATION_SIZE=10

# Maximum number of log files to keep
LOG_MAX_FILES=5

# Enable console colors in logs
LOG_COLORS=true

# =================================================================
# DEVELOPMENT & TESTING CONFIGURATION
# =================================================================

# Test channel ID (optional - use different channel for testing)
# Useful for testing commands without spamming main channel
# TEST_CHANNEL_ID=your_test_channel_id_here

# Enable debug mode (more verbose logging)
DEBUG_MODE=false

# Dry run mode (validate configuration without sending messages)
DRY_RUN=false

# Test message cleanup delay (seconds)
TEST_MESSAGE_CLEANUP_DELAY=5

# Development mode features
DEV_MODE=false

# =================================================================
# PRODUCTION CONFIGURATION
# =================================================================

# Production-specific settings (uncomment for production)
# NODE_ENV=production
# PORT=8080
# LOG_LEVEL=warn
# ENABLE_FILE_LOGGING=true
# DEBUG_MODE=false
# DRY_RUN=false

# Health check configuration
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_PATH=/health
STATUS_CHECK_PATH=/status

# Memory monitoring
MEMORY_WARNING_THRESHOLD=80
MEMORY_CRITICAL_THRESHOLD=90

# =================================================================
# SECURITY CONFIGURATION
# =================================================================

# Rate limiting (requests per minute)
RATE_LIMIT_WINDOW=60000
RATE_LIMIT_MAX_REQUESTS=100

# Request timeout (milliseconds)
REQUEST_TIMEOUT=30000

# Maximum message length
MAX_MESSAGE_LENGTH=2000

# =================================================================
# INTEGRATION CONFIGURATION
# =================================================================

# Webhook URL for external notifications (optional)
# WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL

# Database URL for persistence (optional - future feature)
# DATABASE_URL=sqlite://dsu_bot.db

# External API endpoints (optional)
# EXTERNAL_API_URL=https://api.example.com
# EXTERNAL_API_KEY=your_api_key_here

# =================================================================
# EXAMPLES & TROUBLESHOOTING
# =================================================================

# Example working configuration:
# DISCORD_BOT_TOKEN=YOUR_BOT_TOKEN
# DSU_CHANNEL_ID=YOUR_CHANNEL_ID
# TIMEZONE=Asia/Jakarta
# MENTION_HERE=true
# MORNING_COLOR=3498db
# NODE_ENV=production

# Common Issues & Solutions:
# 
# 1. "Invalid token" error:
#    - Regenerate token in Discord Developer Portal
#    - Ensure token is copied completely without extra spaces
#    - Check that bot has "Message Content Intent" enabled
#
# 2. "Missing permissions" error:
#    - Bot needs "Send Messages" and "Embed Links" permissions
#    - Check channel-specific permission overrides
#    - Ensure bot role is above mentioned roles in hierarchy
#
# 3. "Channel not found" error:
#    - Verify channel ID is correct (17-19 digits)
#    - Ensure bot is added to the server
#    - Check that channel exists and bot can access it
#
# 4. Messages not sending:
#    - Check ENABLE_SCHEDULING is set to true
#    - Verify cron schedule format (use crontab.guru for validation)
#    - Check timezone configuration matches your location
#    - Review logs for specific error messages
#
# 5. Bot appears offline:
#    - Check internet connection
#    - Verify bot token is valid
#    - Ensure bot is invited to server with proper permissions
#    - Check if bot is rate limited
#
# 6. Scheduling not working:
#    - Validate cron expressions using online tools
#    - Check server timezone vs configured timezone
#    - Ensure weekday detection is working (check logs)
#    - Verify ENABLE_SCHEDULING=true

# =================================================================
# QUICK START CHECKLIST
# =================================================================
#
# â–¡ 1. Copy this file to .env
# â–¡ 2. Get Discord bot token from https://discord.com/developers/applications
# â–¡ 3. Enable "Message Content Intent" in bot settings
# â–¡ 4. Get channel ID (Developer Mode â†’ Right-click channel â†’ Copy ID)
# â–¡ 5. Update DISCORD_BOT_TOKEN and DSU_CHANNEL_ID above
# â–¡ 6. Invite bot to server with proper permissions
# â–¡ 7. Test connection: npm run test:connection
# â–¡ 8. Test commands: npm run test:commands
# â–¡ 9. Start bot: npm start
# â–¡ 10. Check logs for any errors